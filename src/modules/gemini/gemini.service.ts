import { GoogleGenAI } from '@google/genai';
import { databaseConnection } from '../../database/db';
// GeminiService class to generate text for user  
export class GeminiService {
  //method to generate text for user
  static async generateTextForUser(userId: number, prompt: string) {
    //try to generate text for user 
    try {
      //query to get gemini api key for user
      const query = `
        SELECT u.id, uapi.gemini_api 
        FROM users u 
        JOIN user_apis uapi ON u.id = uapi.user_id 
        WHERE u.id = ?
      `;
      //execute query to get gemini api key for user
      const [rows]: any = await databaseConnection.promise().query(query, [userId]);
      //get gemini api key for user
      const { gemini_api } = rows[0]; 
      //if gemini api key is not found, return error
      if (!gemini_api) {
        return "No Gemini API key found";
      }

      //create google gen ai client
      const ai = new GoogleGenAI({ apiKey: gemini_api });
      //generate text for user
      const response = await ai.models.generateContent({
        model: 'gemini-2.5-flash',
        contents: prompt,
      });

      //return text generated by gemini
      return response?.text; 
    } catch (error) {
        
      return 'error';
    }
  }
}
